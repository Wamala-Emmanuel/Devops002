name: Production CI/CD

env:
  AZURE_WEBAPP_NAME: devops002
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '3.1.x'
  NUGET_URL: https://pkgs.dev.azure.com/laboremus-uganda/LUG/_packaging/LugNuGetFeed/nuget/v3/index.json
  CLIENTENV: 'EquityProd'
  DOWNLOAD_ARTIFACT: 'no'
  DEPLOY: 'no'

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
        name: 'Production'

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.NUGET_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
          
      - name: .Net build
        if: ${{ env.DOWNLOAD_ARTIFACT }} == 'yes'
        run: dotnet build --configuration Release

#       - name: dotnet publish
#         run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
#       - name: Clean appsettings
#         run: |
#          cd ${{env.DOTNET_ROOT}}/myapp
#          for FILE in $(find . -iname 'appsettings*' -type f); do
#            if [[ "$FILE" = "./appsettings.json" || "$FILE" = "./appsettings.${{ env.CLIENTENV }}.json" ]]; then
#              continue
#             else
#               rm $FILE
#               echo "Removed ${FILE}"
#            fi
#          done
#          ls
        
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v2.3.1
#         with:
#           name: AuthAPI-${{ env.CLIENTENV }}
#           path: ${{env.DOTNET_ROOT}}/myapp
          
#       - if: ${{ env.DOWNLOAD_ARTIFACT }} == 'yes'
#         name: Download artifact from build job
#         uses: actions/download-artifact@v2
#         with:
#           name: AuthAPI-${{ env.CLIENTENV }}

#       - if: ${{ env.DEPLOY }} == 'yes'
#         name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
